import os
import pandas as pd
from lxml import etree
from bs4 import BeautifulSoup
from openpyxl import Workbook

def fix_xml_file(input_path, output_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç XML-—Ñ–∞–π–ª –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª."""
    try:
        with open(input_path, "rb") as file:
            content = file.read()

        # –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏
        encodings = ["utf-8", "windows-1251", "ISO-8859-1"]
        for enc in encodings:
            try:
                content = content.decode(enc)
                break
            except UnicodeDecodeError:
                continue

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º html.parser –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è XML
        soup = BeautifulSoup(content, "html.parser")

        with open(output_path, "w", encoding="utf-8") as file:
            file.write(soup.prettify())

        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {input_path}: {e}")
        return False

def extract_date(root):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ XML."""
    date_document = "N/A"
    
    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –¥–∞—Ç—É –≤ —ç–ª–µ–º–µ–Ω—Ç–µ <date> –≤ —Ä–∞–∑–¥–µ–ª–µ <zglv>
    zglv_date = root.find(".//zglv/date")
    if zglv_date is not None and zglv_date.text:
        date_document = zglv_date.text.strip()
    
    return date_document

def parse_xml_file(file_path):
    """–ü–∞—Ä—Å–∏—Ç XML-—Ñ–∞–π–ª –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ."""
    try:
        parser = etree.XMLParser(recover=False)  # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        tree = etree.parse(file_path, parser)
        root = tree.getroot()
    except etree.XMLSyntaxError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ {file_path}: {e}")
        return None, None  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

    parsed_data = []

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞ <zglv>
    zglv = root.find("zglv")
    version = zglv.find("version").text.strip() if zglv is not None and zglv.find("version") is not None else "N/A"

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞
    date_document = extract_date(root)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ —Ç–µ–≥–∏ –µ—Å—Ç—å –≤ <zap>
    example_zap = root.find("zap")
    if example_zap is None:
        return None, None

    column_names = ["–í–µ—Ä—Å–∏—è", "–î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"]
    first_entry = ["N/A", "N/A"]

    for child in example_zap:
        column_names.append(child.tag)
        first_entry.append(child.text.strip() if child.text else "N/A")

    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    for zap in root.findall("zap"):
        row = [version, date_document]  # –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ <zap>
        for col in column_names[2:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–∞ (–æ–Ω–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã)
            row.append(zap.find(col).text.strip() if zap.find(col) is not None and zap.find(col).text else "N/A")
        parsed_data.append(row)

    return column_names, parsed_data

def process_xml_files(input_folder, output_file, fixed_folder):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç XML-—Ñ–∞–π–ª—ã: —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç, –∑–∞—Ç–µ–º –ø–∞—Ä—Å–∏—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ Excel."""
    if not os.path.exists(fixed_folder):
        os.makedirs(fixed_folder)  # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

    wb = Workbook()
    ws_summary = wb.active
    ws_summary.title = "Summary"

    file_count = 0  # –ü–æ–¥—Å—á–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

    for file_name in os.listdir(input_folder):
        file_path = os.path.join(input_folder, file_name)
        fixed_path = os.path.join(fixed_folder, file_name)

        if os.path.isfile(file_path) and file_name.endswith(".xml"):
            print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {file_name}")

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º XML –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º
            if fix_xml_file(file_path, fixed_path):
                sheet_name = file_name.replace(".xml", "")[:31]  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 31 —Å–∏–º–≤–æ–ª)
                ws = wb.create_sheet(title=sheet_name)

                # –ü–∞—Ä—Å–∏–º —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                result = parse_xml_file(fixed_path)
                if not result or result[1] is None:
                    print(f"üö® –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∞–π–ª {file_name} –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ.")
                    continue

                headers, data = result

                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                ws.append(headers)

                # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
                for row in data:
                    ws.append(row)

                file_count += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Ñ–∞–π–ª—ã
    if file_count == 0:
        print("‚ùå –ù–∏ –æ–¥–∏–Ω XML-—Ñ–∞–π–ª –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")

    wb.save(output_file)
    print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")

# –ü–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
input_folder = "/Users/andru_shaa/Desktop/code_spaces/xml_parse/files"  # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ XML-—Ñ–∞–π–ª—ã
fixed_folder = "/Users/andru_shaa/Desktop/code_spaces/xml_parse/fixed_files"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
output_file = "output.xlsx"  # –ò—Ç–æ–≥–æ–≤—ã–π Excel-—Ñ–∞–π–ª

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
process_xml_files(input_folder, output_file, fixed_folder)